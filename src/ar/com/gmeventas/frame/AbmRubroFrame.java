package ar.com.gmeventas.frame;

import ar.com.gmeventas.entities.Cliente;
import ar.com.gmeventas.entities.Rubro;
import ar.com.gmeventas.main.MainFrame;
import ar.com.gmeventas.services.RubroService;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Administrador
 */
public class AbmRubroFrame extends javax.swing.JFrame {
     List <Rubro>listadoRubro = new ArrayList<Rubro>();
    /**
     * Creates new form AbmRubroFrame
     */
    public AbmRubroFrame() {
        initComponents();
        this.llenartabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu1 = new javax.swing.JMenu();
        jScrollPane1 = new javax.swing.JScrollPane();
        rubroTabla = new javax.swing.JTable();
        nuevoBtn = new javax.swing.JButton();
        modificarBtn = new javax.swing.JButton();
        volverBtn = new javax.swing.JButton();
        borrarBtn = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        archivoMenu = new javax.swing.JMenu();
        nuevoMenuBtn = new javax.swing.JMenuItem();
        modificarMenuBtn = new javax.swing.JMenuItem();
        eliminarMenuBtn = new javax.swing.JMenuItem();
        VovlerMenu = new javax.swing.JMenu();

        jMenu1.setText("jMenu1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        rubroTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(rubroTabla);

        nuevoBtn.setText("Nuevo");
        nuevoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevoBtnActionPerformed(evt);
            }
        });

        modificarBtn.setText("Modificar");
        modificarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificarBtnActionPerformed(evt);
            }
        });

        volverBtn.setText("Volver");
        volverBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                volverBtnActionPerformed(evt);
            }
        });

        borrarBtn.setText("Borrar");
        borrarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrarBtnActionPerformed(evt);
            }
        });

        archivoMenu.setText("Archivo");

        nuevoMenuBtn.setText("Nuevo");
        nuevoMenuBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevoMenuBtnActionPerformed(evt);
            }
        });
        archivoMenu.add(nuevoMenuBtn);

        modificarMenuBtn.setText("Modificar");
        modificarMenuBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificarMenuBtnActionPerformed(evt);
            }
        });
        archivoMenu.add(modificarMenuBtn);

        eliminarMenuBtn.setText("Eliminar");
        eliminarMenuBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarMenuBtnActionPerformed(evt);
            }
        });
        archivoMenu.add(eliminarMenuBtn);

        jMenuBar1.add(archivoMenu);

        VovlerMenu.setText("Volver");
        VovlerMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VovlerMenuActionPerformed(evt);
            }
        });
        jMenuBar1.add(VovlerMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(nuevoBtn)
                        .addGap(18, 18, 18)
                        .addComponent(modificarBtn)
                        .addGap(18, 18, 18)
                        .addComponent(borrarBtn)
                        .addGap(18, 18, 18)
                        .addComponent(volverBtn))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nuevoBtn)
                    .addComponent(modificarBtn)
                    .addComponent(volverBtn)
                    .addComponent(borrarBtn))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void VovlerMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VovlerMenuActionPerformed
        MainFrame mf = new MainFrame();
        mf.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_VovlerMenuActionPerformed

    private void modificarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificarBtnActionPerformed
        Rubro rubro = this.getRubroSeleccionado();
        if(rubro != null){
        ModificarRubroFrame mrf = new ModificarRubroFrame(rubro);
        mrf.setVisible(true);
        this.dispose();
        }
        else{
        JOptionPane.showMessageDialog(this, "Rubro - seleccione un rubro");
        }
        
        
    }//GEN-LAST:event_modificarBtnActionPerformed

    private void eliminarMenuBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarMenuBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_eliminarMenuBtnActionPerformed

    private void nuevoMenuBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevoMenuBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nuevoMenuBtnActionPerformed

    private void modificarMenuBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificarMenuBtnActionPerformed
        ModificarRubroFrame mrf = new ModificarRubroFrame();
        mrf.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_modificarMenuBtnActionPerformed

    private void nuevoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevoBtnActionPerformed
        NuevoRubroFrame nrf = new NuevoRubroFrame();
        nrf.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_nuevoBtnActionPerformed

    private void volverBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_volverBtnActionPerformed
        // TODO add your handling code here:
        MainFrame mf = new MainFrame();
        mf.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_volverBtnActionPerformed

    private void borrarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrarBtnActionPerformed
       this.borrarRubroSeleccionado();
    }//GEN-LAST:event_borrarBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AbmRubroFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AbmRubroFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AbmRubroFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AbmRubroFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AbmRubroFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu VovlerMenu;
    private javax.swing.JMenu archivoMenu;
    private javax.swing.JButton borrarBtn;
    private javax.swing.JMenuItem eliminarMenuBtn;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton modificarBtn;
    private javax.swing.JMenuItem modificarMenuBtn;
    private javax.swing.JButton nuevoBtn;
    private javax.swing.JMenuItem nuevoMenuBtn;
    private javax.swing.JTable rubroTabla;
    private javax.swing.JButton volverBtn;
    // End of variables declaration//GEN-END:variables

    private void llenartabla() {
        try{
            RubroService rubroService = new RubroService();
            listadoRubro = rubroService.getAllRubros();
        } catch(Exception ex){
            JOptionPane.showMessageDialog(this, "error con la base de datos");
        }
        DefaultTableModel model= new DefaultTableModel();
        model.addColumn("CODIGO");
        model.addColumn("NOMBRE");
        if(listadoRubro!=null && !listadoRubro.isEmpty()){
            for (Rubro rubro : listadoRubro ){
            Object[] fila = new Object[2];
            fila[0] = rubro.getCodigo();
            fila[1] = rubro.getNombre();
            model.addRow(fila);
            }
        }  
        rubroTabla.setModel(model);
    }

    private Rubro getRubroSeleccionado() {
       Rubro rubro = null;
       int filaSeleccionada = rubroTabla.getSelectedRow();
       if(filaSeleccionada != -1 && listadoRubro != null && !listadoRubro.isEmpty()){
           rubro = listadoRubro.get(filaSeleccionada);
       }
       else{
           JOptionPane.showMessageDialog(this, "Rubro - Seleccione un rubro de la lista");
       }
        return rubro;
    }

    private void borrarRubroSeleccionado() {
        int filaSeleccionada = rubroTabla.getSelectedRow();
        if (filaSeleccionada != -1){
            int confirm = JOptionPane.showConfirmDialog(this,
                    "¿Desea eliminar al Rubro?",
                    "Borrar - Rubro",
                    JOptionPane.OK_CANCEL_OPTION);
            if (confirm == JOptionPane.OK_OPTION){
                Rubro rubroABorrar = getRubroSeleccionado();
                rubroTabla.removeAll();
                try{
                    new RubroService().deleteRubro(rubroABorrar);
                }catch(Exception ex){
                    JOptionPane.showMessageDialog(this, "Rubro - Error al borrar rubro. Seleccione un rubro");
                }
                this.llenartabla();
            }
        }
    }
    
}
