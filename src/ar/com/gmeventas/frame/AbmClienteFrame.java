/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ar.com.gmeventas.frame;

import ar.com.gmeventas.bo.ClienteBO;
import ar.com.gmeventas.entities.Cliente;
import ar.com.gmeventas.main.MainFrame;
import ar.com.gmeventas.services.ClienteService;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Supervisor
 */
public class AbmClienteFrame extends javax.swing.JFrame {

    private List<Cliente> listadoCliente = null;
    private final ClienteBO bo = new ClienteBO();
    private int paginaActual = 0;

    /**
     * Creates new form AbmCliente
     */
    public AbmClienteFrame() {
        initComponents();
        this.llenarTabla();
        this.setearTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        volverBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaClientes = new javax.swing.JTable();
        modificarBtn = new javax.swing.JButton();
        nuevoBtn = new javax.swing.JButton();
        borrarBtn = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        archivoClienteMenu = new javax.swing.JMenu();
        nuevoMenuBtn = new javax.swing.JMenuItem();
        editarMenuBtn = new javax.swing.JMenuItem();
        salirMenuBtn = new javax.swing.JMenu();

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        volverBtn.setText("Volver");
        volverBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                volverBtnActionPerformed(evt);
            }
        });

        tablaClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CLIENTES"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablaClientes);

        modificarBtn.setText("Modificar");
        modificarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificarBtnActionPerformed(evt);
            }
        });

        nuevoBtn.setText("Nuevo");
        nuevoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevoBtnActionPerformed(evt);
            }
        });

        borrarBtn.setText("Borrar");
        borrarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrarBtnActionPerformed(evt);
            }
        });

        archivoClienteMenu.setText("Archivo");

        nuevoMenuBtn.setText("Nuevo");
        nuevoMenuBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevoMenuBtnActionPerformed(evt);
            }
        });
        archivoClienteMenu.add(nuevoMenuBtn);

        editarMenuBtn.setText("Modificar");
        editarMenuBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarMenuBtnActionPerformed(evt);
            }
        });
        archivoClienteMenu.add(editarMenuBtn);

        jMenuBar1.add(archivoClienteMenu);

        salirMenuBtn.setText("Volver");
        jMenuBar1.add(salirMenuBtn);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(nuevoBtn)
                        .addGap(18, 18, 18)
                        .addComponent(modificarBtn)
                        .addGap(17, 17, 17)
                        .addComponent(borrarBtn)
                        .addGap(18, 18, 18)
                        .addComponent(volverBtn)
                        .addGap(0, 474, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 428, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(modificarBtn)
                    .addComponent(nuevoBtn)
                    .addComponent(volverBtn)
                    .addComponent(borrarBtn))
                .addGap(16, 16, 16))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nuevoMenuBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevoMenuBtnActionPerformed
        NuevoClienteFrame nuevoClienteFrame = new NuevoClienteFrame();
        nuevoClienteFrame.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_nuevoMenuBtnActionPerformed

    private void editarMenuBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarMenuBtnActionPerformed

    }//GEN-LAST:event_editarMenuBtnActionPerformed

    private void volverBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_volverBtnActionPerformed
        MainFrame mainFrame = new MainFrame();
        mainFrame.setVisible(true);
        this.dispose();

    }//GEN-LAST:event_volverBtnActionPerformed

    private void modificarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificarBtnActionPerformed
        Cliente cliente = this.getClienteSeleccionado();
        if (cliente != null) {
            ModificarClienteFrame mcf = new ModificarClienteFrame(cliente);
            mcf.setVisible(true);
            this.dispose();
        } else {
            JOptionPane.showMessageDialog(this, "Debe seleccionar un Cliente de la lista.", "Atencion",
                    JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_modificarBtnActionPerformed

    private void nuevoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevoBtnActionPerformed
        NuevoClienteFrame ncf = new NuevoClienteFrame();
        ncf.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_nuevoBtnActionPerformed

    private void borrarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrarBtnActionPerformed
        this.eliminarClienteSeleccionado();
    }//GEN-LAST:event_borrarBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AbmClienteFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AbmClienteFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AbmClienteFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AbmClienteFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AbmClienteFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu archivoClienteMenu;
    private javax.swing.JButton borrarBtn;
    private javax.swing.JMenuItem editarMenuBtn;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton modificarBtn;
    private javax.swing.JButton nuevoBtn;
    private javax.swing.JMenuItem nuevoMenuBtn;
    private javax.swing.JMenu salirMenuBtn;
    private javax.swing.JTable tablaClientes;
    private javax.swing.JButton volverBtn;
    // End of variables declaration//GEN-END:variables

    private void llenarTabla() {
        listadoCliente = new ArrayList();

        try {
            ClienteService clienteService = new ClienteService();
            listadoCliente = clienteService.getClienteOrdenado(); // Obtengo los Clientes de la DB.
        } catch (Exception ex) {
            // Logear error y mostrarlo
            JOptionPane.showInternalMessageDialog(null, "Error");
        }

    }

    public void setearTabla() {
        tablaClientes.removeColumn(null);
        DefaultTableModel tabla = new DefaultTableModel();
        tabla.addColumn("CODIGO");
        tabla.addColumn("RAZON SOCIAL"); // Creo un nuevo modelo con las columnas
        tabla.addColumn("CUIT");
        if (listadoCliente != null && !listadoCliente.isEmpty()) {

            for (Cliente cliente : listadoCliente) { // Recorro la lista de administradores y lleno la tabla.
                Object[] fila = new Object[3];
                fila[0] = cliente.getCodigo();
                fila[1] = cliente.getRazonSocial();
                fila[2] = cliente.getCuit();

                tabla.addRow(fila); // Agrego la fila a la tabla
            }

        }
        tablaClientes.setModel(tabla); // Pongo la tabla visible.
    }

    private Cliente clienteSeleccionado() {
        Cliente cliente = new Cliente();
        return cliente;
    }

    private void eliminarClienteSeleccionado() {
        int filaSeleccionada = tablaClientes.getSelectedRow();
        if (filaSeleccionada != -1) {
            int confirm = JOptionPane.showConfirmDialog(this,
                    "¿Desea eliminar al Cliente?",
                    "Borrar - Cliente",
                    JOptionPane.OK_CANCEL_OPTION);
            if (confirm == JOptionPane.OK_OPTION) {
                Cliente clienteABorrar = getClienteSeleccionado();
                try {
                    new ClienteService().deleteCliente(clienteABorrar);
                    listadoCliente.remove(filaSeleccionada);
                    llenarTabla();
                    setearTabla();
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(this,
                            "Ha ocurrido un error eliminando al Cliente",
                            "Error",
                            JOptionPane.ERROR_MESSAGE);
                }
            }
        } else {
            JOptionPane.showMessageDialog(this,
                    "Debe seleccionar un Cliente para eliminarlo.",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
        }
    }

    private Cliente getClienteSeleccionado() {
        Cliente cliente = null;
        int filaSeleccionada = tablaClientes.getSelectedRow();
        if (filaSeleccionada != -1 && listadoCliente != null && !listadoCliente.isEmpty()) {
            cliente = listadoCliente.get(filaSeleccionada);
        } else {
//            logger.log(Level.WARNING, "No se selecciono ningun item de la lista");
            JOptionPane.showMessageDialog(this, "Debe seleccionar un cliente de la lista.", "Atencion",
                    JOptionPane.INFORMATION_MESSAGE);
        }
        return cliente;
    }
}
